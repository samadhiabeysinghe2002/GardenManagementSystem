/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loginandsignup;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hi
 */
public class Customers extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard01
     */

    
    public Customers() {
        initComponents();

        DefaultTableModel tablemodel = new DefaultTableModel();
        tablemodel.addColumn("Customer ID");
        tablemodel.addColumn("Full name");
        tablemodel.addColumn("Telephone");
        tablemodel.addColumn("Location");
        tab_customers.setModel(tablemodel);
        
        displayExistingCustomerData();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        btn_savedata = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_cusname = new javax.swing.JTextField();
        txt_loc = new javax.swing.JTextField();
        btn_updatedata = new javax.swing.JButton();
        btn_deletedata = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtf_tp = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txt_cusID = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tab_customers = new javax.swing.JTable();
        Dashboard = new javax.swing.JPanel();
        btn_logout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Customers");
        setFocusTraversalPolicyProvider(true);

        jPanel1.setPreferredSize(new java.awt.Dimension(1070, 600));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setMinimumSize(new java.awt.Dimension(320, 500));
        jPanel2.setPreferredSize(new java.awt.Dimension(350, 600));

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel5.setText("Full name :");

        btn_savedata.setBackground(new java.awt.Color(0, 51, 0));
        btn_savedata.setFont(new java.awt.Font("Segoe UI Black", 0, 15)); // NOI18N
        btn_savedata.setForeground(new java.awt.Color(255, 255, 255));
        btn_savedata.setText("Save");
        btn_savedata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_savedataActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel9.setText("Location :");

        jLabel11.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel11.setText("Telephone : ");

        txt_cusname.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        txt_loc.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txt_loc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_locActionPerformed(evt);
            }
        });

        btn_updatedata.setBackground(new java.awt.Color(0, 51, 0));
        btn_updatedata.setFont(new java.awt.Font("Segoe UI Black", 0, 15)); // NOI18N
        btn_updatedata.setForeground(new java.awt.Color(255, 255, 255));
        btn_updatedata.setText("Update");
        btn_updatedata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updatedataActionPerformed(evt);
            }
        });

        btn_deletedata.setBackground(new java.awt.Color(0, 51, 0));
        btn_deletedata.setFont(new java.awt.Font("Segoe UI Black", 0, 15)); // NOI18N
        btn_deletedata.setForeground(new java.awt.Color(255, 255, 255));
        btn_deletedata.setText("Delete");
        btn_deletedata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deletedataActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 0));
        jLabel3.setText("CUSTOMER DETAILS");

        txtf_tp.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel12.setText("Customer ID :");

        txt_cusID.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_savedata, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_updatedata, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_deletedata, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(txt_cusname, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addGap(18, 18, 18)
                            .addComponent(txtf_tp, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txt_loc, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addGap(18, 18, 18)
                            .addComponent(txt_cusID, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txt_cusID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_cusname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtf_tp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(12, 12, 12)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_loc, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_savedata)
                    .addComponent(btn_deletedata)
                    .addComponent(btn_updatedata))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(250, 0, 350, 600);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setPreferredSize(new java.awt.Dimension(470, 600));

        tab_customers.setBackground(new java.awt.Color(204, 255, 204));
        tab_customers.setBorder(new javax.swing.border.MatteBorder(null));
        tab_customers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Full name", "Telephone", "Location"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab_customers.setToolTipText("");
        tab_customers.setColumnSelectionAllowed(true);
        tab_customers.setGridColor(new java.awt.Color(0, 51, 0));
        tab_customers.setShowGrid(true);
        tab_customers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_customersMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tab_customers);
        tab_customers.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(600, 0, 470, 600);

        Dashboard.setBackground(new java.awt.Color(0, 51, 0));
        Dashboard.setPreferredSize(new java.awt.Dimension(250, 600));

        btn_logout.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_logout.setForeground(new java.awt.Color(153, 0, 0));
        btn_logout.setText("Log out");
        btn_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logoutActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Javanese Text", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("WELCOME ADMIN!");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Hi\\Downloads\\user (3).png")); // NOI18N
        jLabel1.setText("               ");

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton1.setText("Home");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 51, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Customers");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(204, 255, 204));
        jButton4.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton4.setText("Packages");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(204, 255, 204));
        jButton5.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton5.setText("Bookings");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(204, 255, 204));
        jButton6.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton6.setText("Reports");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DashboardLayout = new javax.swing.GroupLayout(Dashboard);
        Dashboard.setLayout(DashboardLayout);
        DashboardLayout.setHorizontalGroup(
            DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DashboardLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18))
            .addGroup(DashboardLayout.createSequentialGroup()
                .addGroup(DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DashboardLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel2))
                    .addGroup(DashboardLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addGroup(DashboardLayout.createSequentialGroup()
                                    .addComponent(btn_logout)
                                    .addGap(100, 100, 100))
                                .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        DashboardLayout.setVerticalGroup(
            DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(btn_logout)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jPanel1.add(Dashboard);
        Dashboard.setBounds(0, 0, 250, 600);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void saveCustomerToDatabase() {
        try{
            String CusID = txt_cusID.getText();
            String fullName = txt_cusname.getText();
            String telephone = txtf_tp.getText();
            String location = txt_loc.getText();
            
            
            if (CusID == null || CusID.trim().isEmpty()) {
            throw new IllegalArgumentException("Please enter customer ID.");
            }
            if (fullName == null || fullName.trim().isEmpty()) {
            throw new IllegalArgumentException("Please enter full name.");
            }
            if(!isValidFullName(fullName)){
                throw new IllegalArgumentException("Please enter a valid full name without numbers and characters.");
            }
            
            if (!isValidPhoneNumber(telephone)) {
                throw new IllegalArgumentException("Please enter a valid telephone number.");
            }
            if (location == null || location.trim().isEmpty()) {
                throw new IllegalArgumentException("Please enter location.");
            }
            
            
            DefaultTableModel tableModel = (DefaultTableModel) tab_customers.getModel();
            tableModel.addRow(new Object[]{CusID, fullName, telephone, location});
            
                try (Connection connection = DatabaseConnection.getConnection();){
                    String sql = "INSERT INTO customer (customer_id, full_name, package, date, time, am_pm, telephone, location, email_address) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                    PreparedStatement preparedStatement = connection.prepareStatement(sql);
                    preparedStatement.setString(1, CusID);
                    preparedStatement.setString(2, fullName);                  
                    preparedStatement.setString(7, telephone);
                    preparedStatement.setString(8, location);
                  
                    
                    int rowsAffected = preparedStatement.executeUpdate();
                            
                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(this, "Student added successfully.");
                        txt_cusID.setText("");
                        txt_cusname.setText(""); 
                        txtf_tp.setText("");
                        txt_loc.setText("");
                     
                        
                    }
                    else {
                        JOptionPane.showMessageDialog(this, "Failed to add student.");
                    }
                    
            
        }}
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            }
            catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "An unexpected error occurred during the save.");
            }
    }

            
    
    
    private void btn_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logoutActionPerformed

        Login LoginFrame = new Login();
        LoginFrame.setVisible(true);
        LoginFrame.pack();
        LoginFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btn_logoutActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Home HomeFrame = new Home();
        HomeFrame.setVisible(true);
        HomeFrame.pack();
        HomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Customers CustomersFrame = new Customers();
        CustomersFrame.setVisible(true);
        CustomersFrame.pack();
        CustomersFrame.setLocationRelativeTo(null);
        this.dispose();            // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Packages PackagesFrame = new Packages();
        PackagesFrame.setVisible(true);
        PackagesFrame.pack();
        PackagesFrame.setLocationRelativeTo(null);
        this.dispose();           // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Billing BillingFrame = new Billing();
        BillingFrame.setVisible(true);
        BillingFrame.pack();
        BillingFrame.setLocationRelativeTo(null);
        this.dispose();            // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btn_deletedataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deletedataActionPerformed
        try {
            int selectedRow = tab_customers.getSelectedRow();
            if (selectedRow == -1) {
                throw new IllegalArgumentException("Please select a row to delete.");
            }
            int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the selected row?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (option != JOptionPane.YES_OPTION) {
                return;
            }
            DefaultTableModel tablemodel = (DefaultTableModel) tab_customers.getModel();
            String CusID = (String) tablemodel.getValueAt(selectedRow, 0);
            tablemodel.removeRow(selectedRow);
            try (Connection connection = DatabaseConnection.getConnection(); )  {
                String sql = "DELETE FROM customer WHERE customer_id = ?";

                PreparedStatement preparedStatement = connection.prepareStatement(sql);
                preparedStatement.setString(1, CusID);

                int rowsAffected = preparedStatement.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "student details deleted successfully.");
                }
                else {
                    JOptionPane.showMessageDialog(this, "Failed to delete student details from the database.");
                }
            }
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
        catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "An unexpected error occurred during the deletion.");
        }
    }//GEN-LAST:event_btn_deletedataActionPerformed

    private void btn_updatedataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updatedataActionPerformed
        try{
            int selectedRowIndex = tab_customers.getSelectedRow();
            if(selectedRowIndex == -1){
                throw new IllegalArgumentException("Please select a row to update!");
            }
            String CusID = txt_cusID.getText();
            String fullName = txt_cusname.getText();         
            String telephone = txtf_tp.getText();
            String location = txt_loc.getText();
            

            if(CusID == null||CusID.trim().isEmpty()){
                throw new IllegalArgumentException("Please enter Customer ID!");
            }
            if(fullName == null||fullName.trim().isEmpty()){
                throw new IllegalArgumentException("Please enter full name!");
            }
            if(!isValidFullName(fullName)){
                throw new IllegalArgumentException("Please enter a valid full name without numbers and characters.");
            }
           
           
            if (!isValidPhoneNumber(telephone)){
                throw new IllegalArgumentException("Please enter a valid telephone number.");
            }
            if(location == null||location.trim().isEmpty()){
                throw new IllegalArgumentException("Please select a package!");
            }
            

            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to update this student?", "Confirm Update", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                DefaultTableModel tablemodel = (DefaultTableModel) tab_customers.getModel();
                tablemodel.setValueAt(CusID, selectedRowIndex, 0);
                tablemodel.setValueAt(fullName, selectedRowIndex, 1);            
                tablemodel.setValueAt(telephone, selectedRowIndex, 3);
                tablemodel.setValueAt(location, selectedRowIndex, 4);
               

                Connection connection = DatabaseConnection.getConnection();
                String sql = "UPDATE customer SET customer_id=?, full_name= ?, package=?, date=?, time=?, am_pm=?, telephone=?, location=?, email_address WHERE customer_id=?";

                PreparedStatement preparedStatement = connection.prepareStatement(sql);
                preparedStatement.setString(1, CusID);
                preparedStatement.setString(2, fullName);
                preparedStatement.setString(3, telephone);
                preparedStatement.setString(4, location);
               

                int rowsAffected = preparedStatement.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "student details updated successfully.");
                }
                else {
                    JOptionPane.showMessageDialog(this, "Failed to update student details in the database.");
                }
                connection.close();
            }
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
        catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "An unexpected error occurred during the update.");
        }
    }//GEN-LAST:event_btn_updatedataActionPerformed

    private void txt_locActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_locActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_locActionPerformed

    private void btn_savedataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_savedataActionPerformed
        saveCustomerToDatabase();
    }//GEN-LAST:event_btn_savedataActionPerformed

    private void tab_customersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_customersMouseClicked
            int selectedRow = tab_customers.getSelectedRow();
    if (selectedRow != -1) {
        // A row is selected, so you can retrieve the data from the selected row
        DefaultTableModel tableModel = (DefaultTableModel) tab_customers.getModel();
        String customerID = (String) tableModel.getValueAt(selectedRow, 0);
        String customername = (String) tableModel.getValueAt(selectedRow, 1);
        String PhoneNumber = (String) tableModel.getValueAt(selectedRow, 2);
        String location = (String) tableModel.getValueAt(selectedRow, 3);
      
        
        // Populate the text fields and combo box with the selected car's data
        txt_cusID.setText(customerID);
        txt_cusname.setText(customername);
        txtf_tp.setText(PhoneNumber);
        txt_loc.setText(location);
       
       

        // You can also enable the "Update" and "Delete" buttons here if needed
        btn_updatedata.setEnabled(true);
        btn_deletedata.setEnabled(true);
    }         // TODO add your handling code here:                        // TODO add your handling code here:
    }//GEN-LAST:event_tab_customersMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
               dispose(); 
                  Home newForm = new Home();

                    // Set the behavior of the new form (e.g., default close operation)
                    newForm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

                    // Display the new form
                    newForm.pack();
                    newForm.setVisible(true);              // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
             dispose(); 
                  Customers newForm = new Customers();

                    // Set the behavior of the new form (e.g., default close operation)
                    newForm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

                    // Display the new form
                    newForm.pack();
                    newForm.setVisible(true);            // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
              dispose(); 
                  Packages newForm = new Packages();

                    // Set the behavior of the new form (e.g., default close operation)
                    newForm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

                    // Display the new form
                    newForm.pack();
                    newForm.setVisible(true);           // TODO add your handling code here:
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
             dispose(); 
                  Billing newForm = new Billing();

                    // Set the behavior of the new form (e.g., default close operation)
                    newForm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

                    // Display the new form
                    newForm.pack();
                    newForm.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    private void displayExistingCustomerData() {
        try {
            try (Connection connection = DatabaseConnection.getConnection();) {
                String sql = "SELECT full_name, package, S_date, S_time, am_pm, telephone, location, email_address FROM Customer";
                
                PreparedStatement preparedStatement = connection.prepareStatement(sql);
                ResultSet resultSet = preparedStatement.executeQuery();
                
                DefaultTableModel tablemodel = (DefaultTableModel) tab_customers.getModel();
                
                while (resultSet.next()) {
                String Fullname = resultSet.getString("full_name");
                String Package = resultSet.getString("package");            
                String Telephone = resultSet.getString("telephone");
                String Location = resultSet.getString("location");
              
                
                tablemodel.addRow(new Object[]{Fullname, Package, Telephone, Location});
                }
            }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Dashboard;
    private javax.swing.JButton btn_deletedata;
    private javax.swing.JButton btn_logout;
    private javax.swing.JButton btn_savedata;
    private javax.swing.JButton btn_updatedata;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tab_customers;
    private javax.swing.JTextField txt_cusID;
    private javax.swing.JTextField txt_cusname;
    private javax.swing.JTextField txt_loc;
    private javax.swing.JTextField txtf_tp;
    // End of variables declaration//GEN-END:variables

    private boolean isValidFullName(String fullName) {
        return fullName.matches("^[a-zA-Z]+$");
    }

    private boolean isValidTime(String time) {
        return time.matches("^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$");
    }

    private boolean isValidPhoneNumber(String telephone) {
        return telephone.matches("^\\d{10}$");
    }

    private boolean isValidEmail(String email) {
        String emailPattern = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        return email.matches(emailPattern);
    }
}
